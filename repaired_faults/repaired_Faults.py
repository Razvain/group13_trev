def find_different_indexes(arr1, arr2):
    different_indexes = []
    for i in range(len(arr1)):
        if arr1[i] != arr2[i]:
            different_indexes.append(i)
    return different_indexes


correct_operators = "==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, <, >=, ==, ==, ==, <, >=, ==, ==, ==, ==, ==, <, >=, ==, ==, <, ==, ==, ==, ==, ==, ==, ==, ==, <, ==, ==, ==, ==, ==, <, ==, <, >=, <, ==, ==, <, >=, ==, ==, <, >=, ==, <=, ==, ==, ==, ==, ==, ==, ==, <, >=, ==, ==, <, ==, ==, <, >=, ==, <, >=, <=, ==, ==, <, <=, ==, <, ==, ==, ==, ==, ==, ==, ==, <, >=, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, <, ==, ==, ==, <, >=, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, <, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, <=, ==, ==, ==, ==, ==, <, >=, ==, ==, ==, ==, ==, ==, <, >=, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, <, >=, ==, ==, ==, <, >=, <, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, <=, ==, ==, ==, ==, <=, <=, <=, <=, <=, <=, ==, ==, ==, <=, ==, ==, ==, ==, ==, <=, ==, ==, ==, ==, ==, ==, <=, <=, ==, <=, <=, ==, ==, <=, <=, ==, ==, <=, ==, ==, <=, ==, <=, <=, <=, <=, ==, <=, <, >=, <, >=, <=, <=, ==, <=, ==, ==, <=, ==, <=, ==, ==, ==, <=, <=, <=, ==, <=, <=, <=, ==, ==, <, >=, ==, ==, ==, <=, <, >=, <, >=, ==, ==, ==, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, ==, <, >=, ==, <, >=, ==, ==, ==, ==, ==, <, >=, ==, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, <, >=, <, >=, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, <, >=, <, >=, ==, ==, <, >=, ==, <, >=, <, >=, <, >=, <, >=, ==, ==, ==, ==, <, >=, ==, ==, ==, ==, <, >=, <, >=, ==, <, >=, ==, <, >=, <, >=, <, >=, ==, <, >=, <, >=, ==, ==, <, >=, <, >=, <, >=, ==, ==, ==, <, >=, <, >=, <, >=, ==, ==, <, >=, ==, <, >=, ==, ==, <, >=, <, >=, ==, <, >=, <, >=, <, >=, ==, ==, ==, <, >=, ==, <, >=, ==, ==, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, ==, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, <, >=, <, >=, ==, <, >=, ==, ==, <, >=, ==, <, >=, <, >=, <, >=, ==, ==, ==, <, >=, ==, ==, ==, ==, <, >=, ==, ==, <, >=, ==, <, >=, <, >=, ==, <, >=, ==, <, >=, <, >=, <, >=, <, >=, ==, ==, ==, <, >=, ==, ==, <, >=, <, >=, ==, ==, ==, <, >=, ==, <, >=, ==, ==, ==, <, >=, <, >=, ==, <, >=, <, >=, <, >=, ==, ==, ==, ==, <, >=, <, >=, <, >=, ==, <, >=, <, >=, ==, <, >=, ==, ==, ==, <, >=, <, >=, <, >=, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, ==, ==, <, >=, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, ==, <, >=, ==, <, >=, <, >=, ==, ==, <=, ==, ==, ==, <, >=, <, >=, <, >=, ==, ==, ==, ==, <=, <=, ==, ==, ==, <=, <=, <=, ==, <=, <=, ==, ==, ==, ==, ==, <=, <=, ==, ==, ==, ==, ==, ==, ==, ==, <=, ==, <=, ==, ==, <=, ==, ==, ==, <=, <=, ==, <=, <=, ==, ==, ==, <=, ==, ==, <=, ==, <=, ==, ==, ==, <=, ==, ==, ==, <=, <=, <=, ==, ==, <=, ==, ==, ==, <=, <=, ==, <=, ==, <=, <=, <=, <=, <=, ==, ==, <=, ==, ==, ==, ==, <=, <=, <=, ==, <=, ==, ==, <=, <=, <=, <=, ==, <=, ==, <, >=, <, >=, ==, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, ==, <, >=, ==, <, >=, <, >=, <, >=, ==, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, <, >=, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, ==, <, >=, <, >=, ==, <, >=, ==, ==, ==, <, >=, <, >=, ==, ==, <, >=, <, >=, ==, <, >=, ==, ==, <, >=, ==, <, >=, <, >=, ==, ==, ==, ==, <, >=, ==, <, >=, <, >=, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, ==, <, >=, ==, <, >=, <, >=, ==, <, >=, <, >=, ==, <, >=, <, >=, ==, <, >=, ==, ==, <, >=, <, >=, ==, <, >=, ==, ==, ==, <=, ==, <=, ==, <=, <=, ==, ==, <=, <=, <, >=, ==, ==, ==, <, >=, <, >=, ==, ==, ==, <, >=, <, >=, <, >=, ==, ==, ==, <, >=, ==, ==, <, >=, <, >=, <, >=, ==, ==, <, >=, ==, ==, ==, <, >=, <, >=, ==, ==, <, >=, ==, <, >=, ==, <, >=, ==, ==, <, >=, ==, ==, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, ==, ==, <, >=, <, >=, ==, ==, <, >=, <, >=, ==, <, >=, <, >=, <=, ==, <=, <=, <=, ==, ==, ==, ==, <=, ==, <=, ==, <=, <=, ==, ==, <=, ==, ==, ==, <=, <=, ==, ==, ==, <, >=, ==, ==, ==, <, >=, ==, ==, <, >=, ==, <, >=, ==, <, >=, ==, ==, ==, ==, ==, ==, ==, ==, ==, <, >=, <, >=, <, >=, ==, <, >=, <, >=, <, >=, ==, ==, <, >=, ==, ==, ==, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, <, >=, ==, =="
correct_operators = correct_operators.split(", ")
faulty_operators = "==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, <, >=, ==, ==, ==, <, >=, ==, ==, ==, ==, ==, <, >=, ==, ==, <, ==, ==, ==, ==, ==, ==, ==, ==, <, ==, ==, !=, ==, ==, <, ==, <, >=, <, ==, ==, <, >=, ==, ==, <, >=, ==, <=, ==, ==, ==, ==, ==, ==, ==, <, >=, ==, ==, <, ==, ==, <, >=, ==, <, >=, <=, ==, ==, <, <=, ==, <, ==, ==, ==, ==, ==, ==, ==, <, >=, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, !=, ==, ==, <, ==, ==, ==, <, >=, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, !=, ==, ==, ==, ==, ==, ==, ==, <, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, <=, ==, ==, ==, ==, ==, <, >=, ==, ==, ==, ==, ==, ==, <, >=, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, <, >=, ==, ==, ==, <, >=, <, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, <=, ==, ==, ==, ==, <=, <=, <=, <=, <=, <=, ==, ==, ==, <=, ==, ==, ==, ==, ==, <=, ==, ==, ==, ==, ==, ==, <=, <=, ==, <=, <=, ==, ==, <=, <=, ==, ==, <=, ==, ==, <=, ==, <=, <=, <=, <=, ==, <=, <, >=, <, >=, <=, <=, ==, <=, ==, ==, <=, !=, <=, ==, ==, ==, <=, <=, <=, ==, <=, <=, <=, ==, ==, <, >=, ==, ==, ==, <=, <, >=, <, >=, ==, ==, ==, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, ==, <, >=, ==, <, >=, ==, ==, ==, ==, ==, <, >=, ==, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, <, >=, <, >=, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, <, >=, <, <=, ==, ==, <, >=, ==, <, >=, <, >=, <, >=, <=, >=, ==, ==, ==, ==, <, >=, ==, ==, ==, ==, <, >=, <, >=, ==, <, >=, ==, <, >=, <, >=, <, >=, ==, <, >=, <, >=, ==, ==, <, >=, <, >=, <, >=, ==, ==, ==, <, >=, <, >=, <, >=, ==, ==, <, >=, ==, <, >=, ==, ==, <, >=, <, >=, ==, <, >=, <, >=, <, >=, ==, ==, ==, <, >=, ==, >, <, ==, ==, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, ==, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, <, >=, <, >=, ==, <, >=, ==, ==, <, >=, ==, <, >=, <, >=, <, >=, ==, ==, ==, <, >=, ==, ==, ==, ==, <, >=, ==, ==, <, >=, ==, <, >=, <, >=, ==, <, >=, ==, <, >=, <, >=, <, >=, <, >=, ==, ==, ==, <, >=, ==, ==, <, >=, <, >=, ==, ==, ==, <, >=, ==, <, >=, ==, ==, ==, <, >=, <, >=, ==, <, >=, <, >=, <, >=, ==, ==, ==, ==, <, >=, <, >=, <, >=, ==, <, >=, <, >=, ==, <, >=, ==, ==, ==, <, >=, <, >=, <, >=, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, ==, ==, <, >=, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, ==, <, >=, ==, <, >=, <, >=, ==, ==, <=, ==, ==, ==, <, >=, <, >=, <, >=, ==, ==, ==, ==, <=, <=, ==, ==, ==, <=, <=, <=, ==, <=, <=, ==, ==, ==, ==, ==, <=, <=, ==, ==, ==, ==, ==, ==, ==, ==, <=, ==, <=, ==, ==, <=, ==, ==, ==, <=, <=, ==, <=, <=, ==, !=, ==, <=, ==, ==, <=, ==, <=, ==, ==, ==, <=, ==, ==, ==, <=, <=, <=, ==, ==, <=, ==, ==, ==, <=, <=, ==, <=, ==, <=, <=, <=, <=, <=, ==, ==, <=, ==, ==, ==, ==, <=, <=, <=, ==, <=, ==, ==, <=, <=, <=, <=, ==, <=, ==, <, >=, <, >=, ==, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, ==, <, >=, ==, <, >=, <, >=, <, >=, ==, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, <, >=, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, ==, >, >=, <, >=, ==, <, >=, ==, ==, ==, <, >=, <, >=, ==, ==, <, >=, <, >=, ==, <, >=, ==, ==, <, >=, ==, <, >=, <, >=, ==, ==, ==, ==, <, >=, ==, <, >=, <, >=, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, ==, <, >=, ==, <, >=, <, >=, ==, <, >=, <, >=, ==, <, >=, <, >=, ==, <, >=, ==, ==, <, >=, <, >=, ==, <, >=, ==, ==, ==, <=, ==, <=, ==, <=, <=, ==, ==, <=, <=, <, >=, ==, ==, ==, <, >=, <, >=, ==, ==, ==, <, >=, <, >=, <, >=, ==, ==, ==, <, >=, ==, ==, <, >=, <, >=, <, >=, ==, ==, <, >=, ==, ==, ==, <, >=, <, >=, ==, ==, <, >=, ==, <, >=, ==, <, >=, ==, ==, <, >=, ==, ==, ==, <, >=, ==, <, >=, !=, <, >=, ==, <, >=, ==, ==, ==, <, >=, <, >=, ==, ==, <, >=, <, >=, ==, <, >=, <, >=, <=, ==, <=, <=, <=, ==, ==, ==, ==, <=, ==, <=, ==, <=, <=, ==, ==, <=, ==, ==, ==, <=, <=, ==, ==, ==, <, >=, ==, ==, ==, <, >=, ==, ==, <, >=, ==, <, >=, ==, <, >=, ==, ==, ==, ==, ==, ==, ==, ==, ==, <, >=, <, >=, <, >=, ==, <, >=, <, >=, <, >=, ==, ==, <, >=, ==, ==, ==, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, <, >=, ==, =="
faulty_operators = faulty_operators.split(", ")
solved_operators = "==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, <, >=, ==, ==, ==, <, >=, ==, ==, ==, ==, ==, <, >=, ==, ==, <, ==, ==, ==, ==, ==, ==, ==, ==, <, ==, ==, !=, ==, ==, <, ==, <, >=, <, ==, ==, <, >=, ==, ==, <, >=, ==, <=, ==, ==, ==, ==, ==, ==, ==, <, >=, ==, ==, <, ==, ==, <, >=, ==, <, >=, <=, ==, ==, <, <=, ==, <, ==, ==, ==, ==, ==, ==, ==, <, >=, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, !=, ==, ==, <, ==, ==, ==, <, >=, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, !=, ==, ==, ==, ==, ==, ==, ==, <, ==, ==, ==, ==, ==, >=, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, <=, ==, ==, ==, ==, ==, <, >=, ==, ==, ==, ==, ==, ==, <, >=, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, <, >=, ==, ==, ==, <, >=, <, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, ==, <=, ==, ==, ==, ==, <=, <=, <=, <=, <=, <=, ==, ==, ==, <=, ==, ==, ==, ==, ==, <=, ==, ==, ==, ==, ==, ==, <=, <=, ==, <=, <=, ==, ==, <=, <=, ==, ==, <=, ==, ==, <=, ==, <=, <=, <=, <=, ==, <=, <, >=, <, >=, <=, <=, ==, <=, ==, ==, <=, !=, <=, ==, ==, ==, <=, <=, <=, ==, <=, <=, <=, ==, ==, <, >=, ==, ==, ==, <=, <, >=, <, >=, ==, ==, ==, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, ==, <, >=, ==, <, >=, ==, ==, ==, ==, ==, <, >=, ==, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, <, >=, <, >=, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, <, >=, <, <=, ==, ==, <, >=, ==, <, >=, <, >=, <, >=, <=, >=, ==, ==, ==, ==, <, >=, ==, ==, ==, ==, <, >=, <, >=, ==, <, >=, ==, <, >=, <, >=, <, >=, ==, <, >=, <, >=, ==, ==, <, >=, <, >=, <, >=, ==, ==, ==, <, >=, <, >=, <, >=, ==, ==, <, >=, ==, <, >=, ==, ==, <, >=, <, >=, ==, <, >=, <, >=, <, >=, ==, ==, ==, <, >=, ==, >, <, ==, ==, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, ==, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, <, >=, <, >=, ==, <, >=, ==, ==, <, >=, ==, <, >=, <, >=, <, >=, ==, ==, ==, <, >=, ==, ==, ==, ==, <, >=, ==, ==, <, >=, ==, <, >=, <, >=, ==, <, >=, ==, <, >=, <, >=, <, >=, <, >=, ==, ==, ==, <, >=, ==, ==, <, >=, <, >=, ==, ==, ==, <, >=, ==, <, >=, ==, ==, ==, <, >=, <, >=, ==, <, >=, <, >=, <, >=, ==, ==, ==, ==, <, >=, <, >=, <, >=, ==, <, >=, <, >=, ==, <, >=, ==, ==, ==, <, >=, <, >=, <, <=, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, ==, ==, <, >=, <, >=, ==, <, >=, <, <, >=, ==, >, >=, ==, <, >=, ==, ==, <, ==, ==, <, >=, <, >=, ==, ==, <=, ==, ==, ==, <, >=, <, >=, <, >=, ==, ==, ==, ==, <=, <=, ==, ==, ==, <=, <=, <=, ==, <=, <=, ==, ==, ==, ==, ==, <=, <=, ==, ==, ==, ==, ==, ==, ==, ==, <=, ==, <=, ==, ==, <=, ==, ==, ==, <=, <=, ==, <=, <=, ==, !=, ==, <=, ==, ==, <=, ==, <=, ==, ==, ==, <=, ==, ==, ==, <=, <=, <=, ==, ==, <=, ==, ==, ==, <=, <=, ==, <=, ==, <=, <=, <=, <=, <=, ==, ==, <=, ==, ==, ==, ==, <=, <=, <=, ==, <=, ==, ==, <=, <=, <=, <=, ==, <=, ==, <, >=, <, >=, ==, ==, <, >=, ==, <, >=, ==, <=, >=, ==, <, >=, ==, <, >=, >=, <, >=, ==, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, ==, <, >=, >, <, >=, <, >=, <, >=, ==, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, <, >=, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, ==, >, >=, <, >=, ==, <, >=, ==, ==, ==, <, >=, <, >=, ==, ==, <, >=, <, >=, ==, <, >=, ==, ==, <, >=, ==, <, >=, <, >=, ==, ==, ==, ==, <, >=, ==, <, >=, <, >=, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, <, >=, ==, ==, <, >=, ==, <, >=, <, >=, ==, <, >=, <, >=, ==, <, >=, <, >=, ==, <, >=, ==, ==, <, >=, <, >=, ==, <, >=, ==, ==, ==, <=, ==, <=, ==, <=, <=, ==, ==, <=, <=, <, >=, ==, ==, ==, <, >=, <, >=, ==, ==, ==, <, >=, <, >=, >=, >=, ==, ==, ==, <, >=, ==, ==, <, >=, <, >=, <, >=, ==, ==, <, >=, ==, ==, ==, <, >=, <, >=, ==, ==, <, >=, ==, <, >=, ==, <, >=, ==, ==, <, >=, ==, ==, ==, <, >=, ==, <, >=, !=, <, >=, ==, <, >=, ==, ==, ==, <, >=, <, >=, ==, ==, <, >=, <, >=, ==, <, >=, <, >=, <=, ==, <=, <=, <=, ==, ==, ==, ==, <=, ==, <=, ==, <=, <=, ==, ==, <=, ==, ==, ==, <=, <=, ==, ==, ==, <, >=, ==, ==, ==, <, >=, ==, ==, <, >=, ==, <, >=, ==, <, >=, ==, ==, ==, ==, ==, ==, ==, ==, ==, <, >=, <, >=, <, >=, ==, <, >=, <, >=, <, >=, ==, ==, <, >=, ==, ==, ==, <, >=, <, >=, <, >=, <, >=, ==, <, >=, ==, ==, <, >=, ==, =="
solved_operators = solved_operators.split(", ")

different_indexes = find_different_indexes(correct_operators, faulty_operators)

total_repaired = 0

for i in different_indexes:
    if correct_operators[i] == solved_operators[i]:
        total_repaired += 1

print(total_repaired, "/", len(different_indexes))